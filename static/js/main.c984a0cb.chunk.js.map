{"version":3,"sources":["components/Display.js","components/Button.js","components/ButtonPanel.js","logic/operate.js","logic/calculate.js","components/App.js","index.js"],"names":["Display","props","result","className","defaultProps","Button","buttonName","clickPanel","type","onClick","ButtonPanel","clickApp","clickHandle","operate","numberOne","numberTwo","operation","n1","Big","n2","plus","minus","times","div","mod","toString","calculate","data","total","next","includes","App","state","handleClick","bind","this","setState","display","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c984a0cb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Display = (props) => {\n  const { result } = props;\n\n  return (\n    <div className=\"display\">\n      <p>{result}</p>\n    </div>\n  );\n};\n\nDisplay.propTypes = {\n  result: PropTypes.string,\n};\n\nDisplay.defaultProps = {\n  result: '0',\n};\n\nexport default Display;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ buttonName, clickPanel }) => {\n  const clickBtn = () => clickPanel(buttonName);\n  return (\n    <button type=\"button\" onClick={clickBtn}>{buttonName}</button>\n  );\n};\n\nButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n  clickPanel: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\n\nconst ButtonPanel = ({ clickApp }) => {\n  const clickHandle = (buttonName) => {\n    clickApp(buttonName);\n  };\n  return (\n    <>\n      <div className=\"g1\">\n        <Button buttonName=\"AC\" clickPanel={clickHandle} className=\"btn\" />\n        <Button buttonName=\"+/-\" clickPanel={clickHandle} />\n        <Button buttonName=\"%\" clickPanel={clickHandle} />\n        <Button buttonName=\"/\" clickPanel={clickHandle} />\n      </div>\n      <div className=\"g1\">\n        <Button buttonName=\"7\" clickPanel={clickHandle} />\n        <Button buttonName=\"8\" clickPanel={clickHandle} />\n        <Button buttonName=\"9\" clickPanel={clickHandle} />\n        <Button buttonName=\"X\" clickPanel={clickHandle} />\n      </div>\n      <div className=\"g1\">\n        <Button buttonName=\"4\" clickPanel={clickHandle} />\n        <Button buttonName=\"5\" clickPanel={clickHandle} />\n        <Button buttonName=\"6\" clickPanel={clickHandle} />\n        <Button buttonName=\"-\" clickPanel={clickHandle} />\n      </div>\n      <div className=\"g1\">\n        <Button buttonName=\"1\" clickPanel={clickHandle} />\n        <Button buttonName=\"2\" clickPanel={clickHandle} />\n        <Button buttonName=\"3\" clickPanel={clickHandle} />\n        <Button buttonName=\"+\" clickPanel={clickHandle} />\n      </div>\n      <div className=\"g1\">\n        <Button buttonName=\"0\" clickPanel={clickHandle} />\n        <Button buttonName=\".\" clickPanel={clickHandle} />\n        <Button buttonName=\"=\" clickPanel={clickHandle} />\n      </div>\n    </>\n  );\n};\n\nButtonPanel.propTypes = {\n  clickApp: PropTypes.func.isRequired,\n};\n\nexport default ButtonPanel;\n","import Big from 'big.js';\n\nconst operate = (numberOne, numberTwo, operation) => {\n  const n1 = Big(numberOne);\n  const n2 = Big(numberTwo);\n  let result = '';\n  switch (operation) {\n    case '+':\n      result = n1.plus(n2);\n      break;\n    case '-':\n      result = n1.minus(n2);\n      break;\n    case 'X':\n      result = n1.times(n2);\n      break;\n    case '/':\n      result = n1.div(n2);\n      break;\n    case '%':\n      result = n1.mod(n2);\n      break;\n    default:\n      result = 'Error!';\n  }\n  return result.toString();\n};\n\nexport default operate;\n","import operate from './operate';\n\nconst calculate = (data, buttonName) => {\n  let { total, next, operation } = data;\n\n  switch (buttonName) {\n    case '+/-':\n      if (total && !next) total *= -1;\n      if (total && next) next *= -1;\n      break;\n    case 'AC':\n      total = null;\n      next = null;\n      operation = null;\n      break;\n    case '.':\n      if (total && !operation) {\n        if (total && !total.includes('.')) total = `${total}.`;\n      }\n      if (total && operation) {\n        if (next && !next.includes('.')) next = `${next}.`;\n        if (!next) next = '0.';\n      }\n      if (!total) total = '0.';\n      break;\n    case '=':\n      if (total && next && operation) {\n        total = operate(total, next, operation);\n      }\n      if (!operation) {\n        total = null;\n      }\n      next = null;\n      operation = null;\n      break;\n    case '0':\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n      if (total && !operation) total += buttonName;\n      if (total && operation && next) next += buttonName;\n      if (total && operation && !next) next = buttonName;\n      if (!total) total = buttonName;\n      break;\n    case '+':\n    case '-':\n    case 'X':\n    case '/':\n    case '%':\n      if (total && !next) operation = buttonName;\n      if (!total) {\n        total = '0';\n        operation = buttonName;\n      }\n      if (total && next && operation) {\n        total = operate(total, next, operation);\n        operation = buttonName;\n        if (operation === '%') operation = null;\n        next = null;\n      }\n      break;\n    default:\n      total = 'Error!';\n  }\n  return { total, next, operation };\n};\n\nexport default calculate;\n","import React from 'react';\nimport Display from './Display';\nimport ButtonPanel from './ButtonPanel';\nimport calculate from '../logic/calculate';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: null,\n      next: null,\n      operation: null,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(buttonName) {\n    const result = calculate(this.state, buttonName);\n    this.setState({ ...result });\n  }\n\n  render() {\n    const { total, operation, next } = this.state;\n    let display = '';\n    if (!total) display = '0';\n    if (total) display = total;\n    if (total && operation) display = total;\n    if (total && operation && next) display = next;\n    return (\n      <>\n        <Display result={display} />\n        <ButtonPanel clickApp={this.handleClick} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}